/**
 * Professor Bentley Electronics Retail API
 * An ecommerce REST API for a retail electronics store. 
 *
 * OpenAPI spec version: 1.5
 * Contact: jordanh316@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Order from '../apiModels/Order';
import Payment from '../apiModels/Payment';

/**
* Orders service.
* @module profb_client/api_classes/OrdersApi
* @version 1.67
*/
export default class OrdersApi {

    /**
    * Constructs a new OrdersApi. 
    * @alias module:profb_client/api_classes/OrdersApi
    * @class
    * @param {module:profb_client/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:profb_client/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getAllUserOrders operation.
     * @callback module:profb_client/api_classes/OrdersApi~getAllUserOrdersCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:profb_client/apiModels/Order>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * fetchs all user orders
     * endpoint to get an array of all user orders
     * @param {module:profb_client/api_classes/OrdersApi~getAllUserOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:profb_client/apiModels/Order>}
     */
    getAllUserOrders() {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Order];

      return this.apiClient.callApi(
        '/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postNewOrder operation.
     * @callback module:profb_client/api_classes/OrdersApi~postNewOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:profb_client/apiModels/Order} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * post a new user order
     * endpoint to post a new user order
     * @param {module:profb_client/api_classes/OrdersApi~postNewOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:profb_client/apiModels/Order}
     */
    postNewOrder() {
      let postBody = null;

      let pathParams = {
        'orderid': orderid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basic'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Order;

      return this.apiClient.callApi(
        '/orders/{orderid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the postPayment operation.
     * @callback module:profb_client/api_classes/OrdersApi~postPaymentCallback
     * @param {String} error Error message, if any.
     * @param {module:profb_client/apiModels/Payment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * post a payment for user order
     * endpoint to checkout a user order
     * @param {Object} opts Optional parameters
     * @param {module:profb_client/api_classes/OrdersApi~postPaymentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:profb_client/apiModels/Payment}
     */
    postPayment() {
      opts = opts || {};
      let postBody = opts['body'];

      let pathParams = {
        'orderid': orderid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basic'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = Payment;

      return this.apiClient.callApi(
        '/checkout/{orderid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
